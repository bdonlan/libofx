Ofxconnect is a utility to test OFX Direct Connect.  And it's a sample so you
can understand how to use it in your own code.

Direct Connect consists of two separate steps:  First, contacting the partner
server to retrieve information about your bank.  Second, contacting your bank
to retrieve your accounts and statements.  The partner server should be
contacted when the user sets up his accounts.  

Common mistakes with the partner server are to contact it EVERY time you
contact the bank, and contacting it just once to cache the contact
info for all banks.  The former is overkill, the latter means users won't
have up-to-date bank contact information.

Step-by-step guide to using the ofxconnect utility

1. Retrieve the list of banks

	$ofxconnect -b

2. Find your bank in the list.  Retrieve the FI partner ID's (fipid's) for that bank

	$ofxconnect -f "Wells Fargo"
	101458
	102078
	5571

3. Retrieve the service capabilities of each fipid to find the one which has the services you want.
Note that all the 6-digit fipids don't seem to work well with libofx right now.

	$ofxconnect -v 5571
	Statements? Yes
	Billpay? Yes
	Investments? No

4. Retrieve and view the list of all your accounts

	$ofxconnect -a --fipid=5571 --user=myusername --pass=mypassword accounts.ofx
	$ofxdump accounts.ofx 2>/dev/null

Look for entries like this:

	Account ID: 999888777 00 123456789
	Account name: Bank account 1234567890
	Account type: CHECKING
	Bank ID: 999888777
	Branch ID: 00
	Account #: 1234567890

5. Retrieve a statement for one of the accounts

	$ofxconnect -s --fipid=5571 --user=myusername --pass=mypassword --bank=xxx --account=xxx --type=x --past=xx statement.ofx
	$ofxdump statement.ofx 2>/dev/null

	The --bank and --account parameters should be exactly like the "Bank ID" and "Account #" results from the account request.
	The --type is: 1=CHECKING, 2=INVESTMENT, 3=CREDITCARD.  Other types are not supported
	The --past is how many days previous from today you want.
